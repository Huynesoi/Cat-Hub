-- üßπ Anti-Lag Script (X√≥a hi·ªáu ·ª©ng v√¥ c·ª±c, b·∫£o v·ªá NPC/Player, LocalPlayer, TouchBlock)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- üìâ Gi·∫£m ƒë·ªì h·ªça 1 l·∫ßn khi v√†o game
task.delay(1, function()
    pcall(function()
        if LocalPlayer and LocalPlayer:FindFirstChild("DevComputer") then
            -- √âp ƒë·ªì h·ªça xu·ªëng m·ª©c th·∫•p nh·∫•t
            LocalPlayer.DevComputer.GraphicsQualityLevel = Enum.GraphicsQualityLevel.Level01
            print("üìâ Graphics quality reduced to lowest for", LocalPlayer.Name)
        end
    end)
end)

-- üìå Danh s√°ch b·ªô ph·∫≠n nh√¢n v·∫≠t (chu·∫©n R15 + th√™m R6 ƒë·ªÉ t∆∞∆°ng th√≠ch game c≈©)
local LimbNames = {
	-- R15
	Head=true,
	UpperTorso=true,
	LowerTorso=true,
	HumanoidRootPart=true,
	LeftUpperArm=true, LeftLowerArm=true, LeftHand=true,
	RightUpperArm=true, RightLowerArm=true, RightHand=true,
	LeftUpperLeg=true, LeftLowerLeg=true, LeftFoot=true,
	RightUpperLeg=true, RightLowerLeg=true, RightFoot=true,

	-- R6
	Torso=true,
	LeftArm=true, RightArm=true,
	LeftLeg=true, RightLeg=true
}

-- üõ°Ô∏è Ki·ªÉm tra model c√≥ Humanoid ho·∫∑c limb quen thu·ªôc
local function isProtectedModel(model)
	if not model or not model:IsA("Model") then return false end
	if model:FindFirstChildOfClass("Humanoid") or model:FindFirstChild("HumanoidRootPart") then
		return true
	end
	for limbName, _ in pairs(LimbNames) do
		if model:FindFirstChild(limbName) then
			return true
		end
	end
	return false
end

-- ‚úÖ Ki·ªÉm tra MeshPart c√≥ ph·∫£i b·ªô ph·∫≠n nh√¢n v·∫≠t kh√¥ng
local function isCharacterMeshPart(part)
	if not part or not part:IsA("MeshPart") then return false end
	if LimbNames[part.Name] then return true end
	local model = part:FindFirstAncestorOfClass("Model")
	if model and isProtectedModel(model) then return true end
	return false
end

-- ‚úÖ Block c√≥ th·ªÉ ch·∫°m (gi·ªØ l·∫°i)
local function isTouchBlock(part)
	return part:IsA("BasePart") and part.CanTouch
end

-- üß† B·ªô ph·∫≠n quan tr·ªçng (ƒë·∫ßu, tay, ch√¢n, torso, rootpart)
local function isImportantBodyPart(part)
	if not part:IsA("BasePart") then return false end
	return LimbNames[part.Name] ~= nil
end

-- üé• LocalPlayer v√† Camera
local function isLocalOrCamera(instance)
	return instance:IsA("Camera") or instance:IsDescendantOf(LocalPlayer)
end

-- ‚öôÔ∏è T·ªëi ∆∞u Part (kh√¥ng √©p Material n·∫øu part ƒë√£ trong su·ªët)
local function optimizePart(part)
    if part:IsA("BasePart") then
        local model = part:FindFirstAncestorOfClass("Model")
        if not isProtectedModel(model) then
            if part.Transparency < 1 then -- üîí gi·ªØ nguy√™n n·∫øu ƒë√£ trong su·ªët
                part.Material = Enum.Material.Plastic
            end
            part.CastShadow = false
        end
    end
end

-- üí• X√≥a MeshId an to√†n (ch·ªâ x√≥a MeshPart hi·ªáu ·ª©ng, kh√¥ng x√≥a ƒë·∫£o)
local function safeClearMeshId(instance)
    if isCharacterMeshPart(instance) then return end

    -- ‚ùå Kh√¥ng xo√° MeshPart trong Workspace.Map (th∆∞·ªùng l√† ƒë·∫£o, c·∫ßu, nh√†)
    local parent = instance:FindFirstAncestorOfClass("Model")
    if parent and parent:IsDescendantOf(workspace:FindFirstChild("Map")) then
        return
    end

    if instance:IsA("MeshPart") and instance.MeshId ~= "" then
        local oldTransparency = instance.Transparency
        instance.MeshId = "rbxassetid://0"
        task.delay(1.1, function()
            if instance then instance.Transparency = oldTransparency end
        end)
    end
end

-- üöÆ X·ª≠ l√Ω x√≥a object kh√¥ng c·∫ßn thi·∫øt
local function handleDeletion(instance)
	local model = instance:FindFirstAncestorOfClass("Model")
	if isProtectedModel(model) then return end
	if Players:GetPlayerFromCharacter(instance) then return end
	if isImportantBodyPart(instance) then return end
	if isLocalOrCamera(instance) then return end
	if isCharacterMeshPart(instance) then return end

	-- Gi·ªØ l·∫°i block c√≥ th·ªÉ ch·∫°m (ch·ªâ g·ªçt mesh)
	if isTouchBlock(instance) then
		for _, child in ipairs(instance:GetDescendants()) do
			safeClearMeshId(child)
		end
		safeClearMeshId(instance)
		return
	end

	-- ‚ö†Ô∏è X√≥a c√°c hi·ªáu ·ª©ng g√¢y lag
	if instance:IsA("ParticleEmitter")
	or instance:IsA("Beam")
	or instance:IsA("Trail")
	or instance:IsA("Fire")
	or instance:IsA("Smoke")
	or instance:IsA("Sparkles")
	or instance:IsA("Explosion") then
		instance:Destroy()

	-- ‚ö†Ô∏è X√≥a lu√¥n s·ªë damage (BillboardGui / SurfaceGui c√≥ TextLabel)
	elseif instance:IsA("BillboardGui") or instance:IsA("SurfaceGui") then
		if instance:FindFirstChildWhichIsA("TextLabel") then
			instance:Destroy()
		end

	elseif instance:IsA("MeshPart") then
		instance:Destroy()
	end
end

-- üßΩ D·ªçn to√†n b·ªô map ban ƒë·∫ßu
local function initialCleanup()
	for _, instance in ipairs(workspace:GetDescendants()) do
		optimizePart(instance)
		handleDeletion(instance)
	end
end

-- üîÅ Theo d√µi v√† d·ªçn m·ªõi
workspace.DescendantAdded:Connect(function(instance)
	task.defer(function()
		optimizePart(instance)
		handleDeletion(instance)
	end)
end)

-- üöÄ Kh·ªüi ƒë·ªông script
initialCleanup()

print("‚úÖ Anti-Lag ƒë√£ b·∫≠t (b·∫£o v·ªá MeshPart NPC/Player v·ªõi limb R15 + R6, kh√¥ng check t√™n Lv, gi·∫£m ƒë·ªì h·ªça 1 l·∫ßn).")
