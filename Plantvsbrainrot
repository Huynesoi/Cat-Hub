-- Seed AutoBuy (ưu tiên từ trên xuống, GUI nhỏ hơn, màu stock, bỏ Padding + auto add seed mới)

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

local remote = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

local seedsFrame = player:WaitForChild("PlayerGui")
    :WaitForChild("Main")
    :WaitForChild("Seeds")
    :WaitForChild("Frame")
    :WaitForChild("ScrollingFrame")

-- parse số trong stock text
local function parseStockNumber(stockText)
    if not stockText then return 0 end
    local s = tostring(stockText)
    s = s:gsub("×", "x")
    local n = s:match("x%s*(%d+)")
    if not n then
        n = s:match("(%d+)")
    end
    return tonumber(n) or 0
end

-- lấy seed hợp lệ
local function getAllSeeds()
    local seedNames = {}
    for _, child in ipairs(seedsFrame:GetChildren()) do
        if child:IsA("GuiObject") and child.Name and child.Name ~= "" and child.Name ~= "Padding" then
            table.insert(seedNames, child.Name)
        end
    end
    return seedNames
end

-- GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "SeedChecker"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 100, 0, 28)
toggleBtn.Position = UDim2.new(0, 12, 0, 100)
toggleBtn.Text = "Hiện/Ẩn Menu"
toggleBtn.BackgroundColor3 = Color3.fromRGB(100,100,100)
toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
toggleBtn.Parent = ScreenGui

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 220, 0, 260) -- nhỏ hơn 30%
MainFrame.Position = UDim2.new(0.05, 0, 0.18, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(40,40,40)
MainFrame.Active = true
MainFrame.Parent = ScreenGui

local Header = Instance.new("Frame")
Header.Size = UDim2.new(1, 0, 0, 32)
Header.BackgroundColor3 = Color3.fromRGB(60,60,60)
Header.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(0.7, 0, 1, 0)
Title.Position = UDim2.new(0, 6, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "nước hoa minh béo"
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 14
Title.TextColor3 = Color3.fromRGB(255,255,255)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = Header

local TotalCollectLabel = Instance.new("TextLabel")
TotalCollectLabel.Size = UDim2.new(0.3, -6, 1, 0)
TotalCollectLabel.Position = UDim2.new(0.7, 0, 0, 0)
TotalCollectLabel.BackgroundTransparency = 1
TotalCollectLabel.Text = "Total: 0"
TotalCollectLabel.Font = Enum.Font.SourceSans
TotalCollectLabel.TextSize = 14
TotalCollectLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
TotalCollectLabel.Parent = Header

local ScrollingFrame = Instance.new("ScrollingFrame")
ScrollingFrame.Size = UDim2.new(1, -6, 1, -40)
ScrollingFrame.Position = UDim2.new(0, 3, 0, 36)
ScrollingFrame.CanvasSize = UDim2.new(0,0,0,0)
ScrollingFrame.ScrollBarThickness = 5
ScrollingFrame.Parent = MainFrame

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = ScrollingFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0,4)

toggleBtn.MouseButton1Click:Connect(function()
    MainFrame.Visible = not MainFrame.Visible
end)

-- drag gui
do
    local dragging, dragInput, dragStart, startPos
    Header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragInput = input
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then dragging = false end
            end)
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
                                           startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

-- trạng thái
local selectedSeeds = {}
local collectPerSeed = {}
local totalCollect = 0
local lastBoughtTime = 0

-- hàm mua
local function buySeed(seedName)
    local args = { {seedName, "\a"} }
    local success, err = pcall(function()
        remote:FireServer(unpack(args))
    end)
    if success then
        collectPerSeed[seedName] = (collectPerSeed[seedName] or 0) + 1
        totalCollect += 1
        TotalCollectLabel.Text = "Total: "..totalCollect
    else
        warn("Buy failed", err)
    end
end

-- tạo row seed
local seedRows = {}
local orderedSeeds = {}

local function createSeedRow(seedName)
    if seedRows[seedName] then return end
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -6, 0, 28)
    container.BackgroundTransparency = 1
    container.Parent = ScrollingFrame

    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0.55, 0, 1, 0)
    btn.Text = seedName
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(80,80,80)
    btn.TextColor3 = Color3.fromRGB(255,255,255)
    btn.Parent = container

    local info = Instance.new("TextLabel")
    info.Size = UDim2.new(0.45, -4, 1, 0)
    info.Position = UDim2.new(0.55, 4, 0, 0)
    info.BackgroundTransparency = 1
    info.Font = Enum.Font.SourceSans
    info.TextSize = 13
    info.Text = "Checking..."
    info.TextXAlignment = Enum.TextXAlignment.Left
    info.Parent = container

    selectedSeeds[seedName] = false
    collectPerSeed[seedName] = 0

    btn.MouseButton1Click:Connect(function()
        selectedSeeds[seedName] = not selectedSeeds[seedName]
        btn.BackgroundColor3 = selectedSeeds[seedName] and Color3.fromRGB(0,200,0) or Color3.fromRGB(80,80,80)
    end)

    seedRows[seedName] = {name = seedName, info = info}
    table.insert(orderedSeeds, seedName)
end

for _, seed in ipairs(getAllSeeds()) do
    createSeedRow(seed)
end

UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    ScrollingFrame.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y+8)
end)

-- auto add seed khi load chậm
task.spawn(function()
    while task.wait(1) do
        for _, seed in ipairs(getAllSeeds()) do
            if not seedRows[seed] then
                createSeedRow(seed)
            end
        end
    end
end)

-- loop trung tâm: check 0.05s, mua 0.5s theo thứ tự
task.spawn(function()
    while true do
        local now = tick()
        for _, seedName in ipairs(orderedSeeds) do
            local row = seedRows[seedName]
            local info = row.info
            local stockText
            local ok, result = pcall(function()
                local obj = seedsFrame:FindFirstChild(seedName)
                return obj and obj:FindFirstChild("Stock") and obj.Stock.Text or nil
            end)
            if ok then stockText = result end

            if stockText then
                local stockNum = parseStockNumber(stockText)
                if stockNum > 0 then
                    info.TextColor3 = Color3.fromRGB(0,255,0)
                else
                    info.TextColor3 = Color3.fromRGB(255,80,80)
                end
                info.Text = tostring(stockText).." | Collect:"..collectPerSeed[seedName]
                if selectedSeeds[seedName] and stockNum > 0 and (now - lastBoughtTime) >= 0.5 then
                    buySeed(seedName)
                    lastBoughtTime = now
                    break -- mua 1 hạt rồi dừng, ưu tiên từ trên xuống
                end
            else
                info.Text = "N/A | Collect:"..collectPerSeed[seedName]
                info.TextColor3 = Color3.fromRGB(200,200,200)
            end
            task.wait(0.05)
        end
    end
end)

print("SeedChecker: Ưu tiên trên xuống, GUI nhỏ hơn, màu stock, bỏ Padding, auto add seed mới, check 0.05s, mua 0.5s.")
